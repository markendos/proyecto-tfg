name: Preproduction Branch
on:
  pull_request:
    branches: [ pre ]
  push:
    branches: [ pre ]
jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Maven Test
        run: mvn -B -Ptest test
      - name: Maven Verify
        run: mvn -B -Pprod clean verify -DskipTests   
  docker:
    name: Publish Docker Image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_REPO }}
      -   
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  automerge:
    name: Automerge
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:      
      - name: Automerge
        uses: "pascalgn/automerge-action@v0.13.1"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_LABELS: ""
  deploy:
    name: Docker Deploy
    runs-on: ubuntu-latest
    needs: [build, docker, automerge]
    steps:
      - uses: actions/checkout@v2
      - name: Deploy to Docker Host
        uses: wshihadeh/docker-deployment-action@v1
        with:
          remote_docker_host: ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}
          ssh_private_key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          ssh_public_key: ${{ secrets.DOCKER_SSH_PUBLIC_KEY }}
          deployment_mode: docker-compose
          copy_stack_file: true
          deploy_path: /home/web-app/proyecto-tfg-deploy
          stack_file_name: docker-compose.yml
          keep_files: 5
          args: up -d
          docker_prune: 'false'
          pull_images_first: 'true'
